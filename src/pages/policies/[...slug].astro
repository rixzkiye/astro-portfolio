---
import { getCollection, type CollectionEntry } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
// Anda mungkin ingin menggunakan view counter di sini juga, tergantung kebutuhan.
// import { incrementView, getViewCount } from '../../utils/viewCounter';

export async function getStaticPaths() {
  const policies = await getCollection('policies');
  return policies.map(policy => ({
    params: { slug: policy.slug },
    props: { policy },
  }));
}

type Props = {
  policy: CollectionEntry<'policies'>;
};

const { policy } = Astro.props;
const { Content } = await policy.render();

// Jika menggunakan view counter:
// const policyId = `policies-${policy.slug}`;
// const viewCount = await incrementView(policyId);
// const currentViewCount = await getViewCount(policyId);

// Logika untuk navigasi kembali ke proyek dan navigasi antar dokumen legal
const slugParts = policy.slug.split('/');
const projectSlug = slugParts.length > 1 ? slugParts[0] : null; // Asumsi slug format: project-name/document-type
const documentType = slugParts.length > 1 ? slugParts[1] : slugParts[0]; // privacy-policy atau terms-of-service

let backToProjectLink = null;
let backToProjectText = 'Kembali'; // Default text

// Jika kita bisa mengidentifikasi proyek dari slug legal
if (projectSlug) {
  // Cari proyek yang slug-nya cocok dengan projectSlug
  const projects = await getCollection('projects'); // Ambil semua proyek
  const relatedProject = projects.find(proj => proj.slug.endsWith(projectSlug)); // Cari berdasarkan bagian akhir slug

  if (relatedProject) {
    // Jika proyek ditemukan, buat tautan ke halaman detail proyek
    backToProjectLink = `/projects/${relatedProject.data.category}/${relatedProject.slug.split('/').pop()}`;
    backToProjectText = `← Kembali ke Proyek: ${relatedProject.data.title}`; // Tampilkan judul proyek
  } else {
    // Jika proyek tidak ditemukan, kembali ke halaman proyek utama
    backToProjectLink = '/projects';
    backToProjectText = '← Kembali ke Proyek';
  }
} else {
   // Jika tidak ada projectSlug (untuk dokumen legal umum)
   backToProjectLink = '/'; // Kembali ke beranda atau halaman lain yang sesuai
   backToProjectText = '← Kembali';
}

let otherDocumentLink = null;
let otherDocumentText = null;

if (projectSlug) {
  // Jika ini dokumen legal spesifik proyek
  if (documentType === 'privacy-policy') {
    otherDocumentLink = `/policies/${projectSlug}/terms-of-service`; // Kembali menggunakan /policies/
    otherDocumentText = 'Read Terms of Service →';
  }
   else if (documentType === 'terms-of-service') {
    otherDocumentLink = `/policies/${projectSlug}/privacy-policy`; // Kembali menggunakan /policies/
    otherDocumentText = 'Read Privacy Policy →';
  }
}
// ... logika untuk dokumen legal umum (jika ada) ...

---

<Layout title={policy.data.title} description={policy.data.description}>
  {/* ... Hero Section dan Visual Highlight tetap sama ... */}

  <nav class="mb-8">
    {/* Tombol Kembali */}
    {backToProjectLink && (
       <a
          href={backToProjectLink}
          class="inline-flex items-center text-light-accent dark:text-dark-accent hover:underline"
        >
          {backToProjectText}
        </a>
    )}

  <!-- Markdown Content -->
  <article class="px-4 sm:px-6 lg:px-8">
    <div class="max-w-4xl mx-auto prose prose-lg dark:prose-invert max-w-none">
      <Content />
    </div>

    <!-- Navigation -->
    <nav class="mt-16 pt-8 border-t border-light-border dark:border-dark-border flex justify-between items-center">
      {/* Tombol Kembali */}
      {backToProjectLink && (
         <a
            href={backToProjectLink}
            class="text-light-accent dark:text-dark-accent hover:underline"
          >
            {backToProjectText}
          </a>
      )}

      {/* Tombol Navigasi Antar Dokumen Legal */}
      {otherDocumentLink && (
        <a
          href={otherDocumentLink}
          class="text-light-accent dark:text-dark-accent hover:underline" 
        >
          {otherDocumentText}
        </a>
      )}
    </nav>
  </article>
</Layout>

<style is:global>
  .prose {
    @apply text-light-text dark:text-dark-text transition-all;
  }
  .prose h1, .prose h2, .prose h3 {
    @apply font-bold tracking-tight;
  }
  .prose a {
    @apply transition-colors hover:text-light-accent dark:hover:text-dark-accent;
  }
  .prose blockquote {
    @apply border-l-4 border-light-accent dark:border-dark-accent italic pl-4;
  }
  .prose code {
    @apply bg-light-surface dark:bg-dark-surface px-1 py-0.5 rounded text-sm;
  }
  .prose pre {
    @apply bg-light-surface dark:bg-dark-surface rounded-lg overflow-auto;
  }
</style>

---
// src/pages/pustaka.astro
import Layout from "../layouts/Layout.astro";
import { getCollection } from "astro:content";

// Import komponen Pagination dan CardContainer
import Pagination from "../components/Pagination.astro";
import CardContainer from "../components/CardContainer.tsx"; // Import komponen CardContainer React

// --- Data Fetching & Processing ---
// Fetch all published projects and papers
const projects = await getCollection(
  "projects",
  ({ data }) => data.status === "published"
);
const papers = await getCollection(
  "papers",
  ({ data }) => data.status === "published"
);

// Combine and sort all content by date (newest first)
const allContent = [
  ...projects.map((item) => ({ ...item, type: "project" as const })),
  ...papers.map((item) => ({ ...item, type: "paper" as const })),
].sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());

// Featured content dan category counts (untuk statistik jika perlu di masa depan)
const featuredContent = allContent.filter((item) => item.data.featured);
const categoryCounts = allContent.reduce(
  (acc, item) => {
    const category = item.data.category;
    if (category) {
      acc[category] = (acc[category] || 0) + 1;
    }
    return acc;
  },
  {} as Record<string, number>
);
const stats = {
  totalProjects: projects.length,
  totalPapers: papers.length,
  totalContent: allContent.length,
  categories: {
    code: categoryCounts.code || 0,
    music: categoryCounts.music || 0,
    video: categoryCounts.video || 0,
    esai: categoryCounts.esai || 0,
    puisi: categoryCounts.puisi || 0,
    artikel: categoryCounts.artikel || 0,
    cerpen: categoryCounts.cerpen || 0,
  },
};


// Define items per page for pagination (gunakan jumlah yang sama dengan projects/papers)
const itemsPerPage = 9; // Anda bisa menyesuaikan angka ini

// --- getStaticPaths for Pagination ---
export async function getStaticPaths() {
  const projects = await getCollection("projects", ({ data }) => data.status === "published");
  const papers = await getCollection("papers", ({ data }) => data.status === "published");

  const allContent = [
    ...projects.map((item) => ({ ...item, type: "project" as const })),
    ...papers.map((item) => ({ ...item, type: "paper" as const })),
  ].sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());

  const itemsPerPage = 9; // Match the number above

  // Paginate the combined content
  const totalPages = Math.ceil(allContent.length / itemsPerPage);
  const paths = [];

  for (let i = 1; i <= totalPages; i++) {
    paths.push({
      params: { page: i.toString() }, // Slug will be /pustaka/1, /pustaka/2, etc.
      props: {
        currentPage: i,
        totalPages: totalPages,
        // Pass only the items for the current page
         // Konversi data Astro Collection ke objek JavaScript biasa
        paginatedItems: allContent.slice(
          (i - 1) * itemsPerPage,
          i * itemsPerPage
        ).map(item => ({
            ...item.data,
            slug: item.slug,
            type: item.type,
            date: item.data.date ? item.data.date.toISOString() : undefined,
            externalLink: item.data.externalLink || undefined,
            githubLink: item.data.githubLink || undefined,
            youtubeLink: item.data.youtubeLink || undefined,
            spotifyLink: item.data.spotifyLink || undefined,
            pdfUrl: item.data.pdfUrl || undefined,
            readTime: item.data.readTime || undefined,
            featured: item.data.featured || false,
            category: item.data.category || 'unknown',
            tags: item.data.tags || [],
            thumbnail: item.data.thumbnail || undefined,
        })),
      },
    });
  }

  // Add a path for the first page without a number slug (/pustaka/)
   paths.push({
       params: { page: undefined },
       props: {
           currentPage: 1,
           totalPages: totalPages,
           paginatedItems: allContent.slice(0, itemsPerPage).map(item => ({
               ...item.data,
               slug: item.slug,
               type: item.type,
               date: item.data.date ? item.data.date.toISOString() : undefined,
               externalLink: item.data.externalLink || undefined,
               githubLink: item.data.githubLink || undefined,
               youtubeLink: item.data.youtubeLink || undefined,
               spotifyLink: item.data.spotifyLink || undefined,
               pdfUrl: item.data.pdfUrl || undefined,
               readTime: item.data.readTime || undefined,
               featured: item.data.featured || false,
               category: item.data.category || 'unknown',
               tags: item.data.tags || [],
               thumbnail: item.data.thumbnail || undefined,
           })),
       }
   });

  return paths;
}

// --- Props for the current page ---
type Props = {
  currentPage: number;
  totalPages: number;
  paginatedItems: any[];
};

const { currentPage, totalPages, paginatedItems } = Astro.props;

// Konversi string tanggal ISO kembali menjadi objek Date di sisi klien
const itemsWithDateObjects = paginatedItems.map(item => ({
    ...item,
    date: item.date && typeof item.date === 'string' ? new Date(item.date) : undefined
}));


---

<Layout
  title={`Library - Page ${currentPage} - My Work`}
  description="Explore the complete collection of my projects and writings. Find new inspiration and insights from all my creative and intellectual work."
>
  {/* --- Hero Section --- */}
  <section class="relative py-24 px-4 sm:px-6 lg:px-8">
    <div
      class="absolute inset-0 -z-10 bg-light-background dark:bg-dark-background"
    >
      {/* Floating Elements */}
      <div
        class="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-96 h-96 bg-light-accent/10 dark:bg-dark-accent/10 rounded-full filter blur-3xl animate-pulse"
      ></div>
      <div
        class="absolute top-1/4 left-1/4 w-72 h-72 bg-blue-500/5 rounded-full filter blur-3xl animate-pulse"
        style="animation-delay: 2s;"
      ></div>
      <div
        class="absolute bottom-1/4 right-1/4 w-72 h-72 bg-purple-500/5 rounded-full filter blur-3xl animate-pulse"
        style="animation-delay: 4s;"
      ></div>
    </div>
    <div class="max-w-4xl mx-auto text-center">
      <h1
        class="text-4xl md:text-6xl font-bold text-light-text dark:text-dark-text mb-6"
      >
        Digital <span class="text-gradient">Library</span>
      </h1>
      <p
        class="text-xl text-light-muted dark:text-dark-muted max-w-2xl mx-auto mb-8"
      >
        Explore the complete collection of my work - from tech projects to creative writings.
      </p>

      {/* --- Search Container (Dihapus) --- */}
      {/* Saya akan menghapus total elemen HTML dan script terkait search & filter */}

    </div>
  </section>

  {/* --- Desktop Filter Buttons (Dihapus) --- */}
  {/* ... */}

  {/* --- Content Grid and View Toggle --- */}
  <section class="px-4 sm:px-6 lg:px-8 pb-20">
    <div class="max-w-7xl mx-auto">

      {/* --- Pustaka Grid/List (gunakan CardContainer React) --- */}
      {/* CardContainer sekarang mencakup ViewToggle di dalamnya dan mengelola state tampilan */}
      {/* Menggunakan client:load agar dijalankan di browser dan menerima props */}
      <CardContainer client:load items={itemsWithDateObjects} itemType="content" />


      {/* --- Pagination --- */}
       <Pagination currentPage={currentPage} totalPages={totalPages} basePath="/pustaka/" />

      {/* --- Empty State (Adapt for pagination) --- */}
       {paginatedItems.length === 0 && (
           <div class="text-center py-20">
               <div class="text-6xl mb-4">ðŸ¤·</div>
               <h2 class="text-2xl font-bold text-light-text dark:text-dark-text">No Content Found</h2>
               <p class="text-light-muted dark:text-dark-muted">It seems there is no content available on this page.</p>
           </div>
       )}

    </div>
  </section>

  {/* --- Category Section (Dihapus) --- */}
   {/* ... */}

  {/* --- Stats Section (Dihapus) --- */}
   {/* ... */}

</Layout>

{/* --- CSS Global --- */}
{/* CSS untuk tata letak container dan item di dalam CardContainer ditangani oleh komponen itu sendiri */}
{/* Anda mungkin perlu CSS global di sini jika ada gaya yang menimpa atau perlu disesuaikan di luar CardContainer */}
<style is:global>
   /* Aturan default untuk grid (sudah ada di CardContainer className={viewMode === 'grid' ? gridClasses : listClasses}) */
    /* grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 */

    /* Aturan untuk list view (sudah ada di CardContainer) */
    /* flex flex-col gap-6 */

    /* CSS tambahan jika diperlukan untuk mengatasi styling global */
    /* Misalnya, jika .content-item-project atau .content-item-paper perlu override global styles */
</style>

 {/* --- Client-side Script (Dihapus) --- */}
 {/* Saya akan menghapus total script inline lama terkait search & filter */}
